name: unicast

storage: storage

primaryLanguage: eng

secondaryLanguages: []

server:
    port: 3030

    acl:
        - kind: ip
          patterns:
            - 192.168.*.*
            - ::ffff:192.168.*.*
          allow: all

        - kind: any
          allow: read

    ssl:
        enabled: true
        key: server.key
        certificate: server.cert
        passphrase: server
        port: 3033

database:
    client: better-sqlite3
    useNullAsDefault: true
    debug: false
    compileSqlOnError: true
    asyncStackTraces: true
    connection:
        filename: ./storage/database.db
    migrations:
        directory: ./lib/Database/Migrations

extensions:
    # Generic extension configurations
    #
    # MediaReceivers/Chromecast:
    #   disable: true

receivers:
    # Can disable auto scanning for player devices in the network
    scan: true
    default: false
    # An array of objects containing  at least two properties: 'name' and 'address' (ip) of the devices
    list:
    #   The server should be able to auto-detect chromecast devices in a local network
    #   If for some reason your devices aren't showing up, you can try adding them manually to the list
    #   Note: The device name can be anything, but should be unique. Duplicated names will result in unexpected behaviors

    #   - name: DeviceName
    #     address: 192.168.0.60
    #     type: chromecast


repositories:
    # An array of repositories containing the media files. The only repository currently supported is the filesystem one~~
    # The 'content' property can be either 'tvshows' or 'movies'
    # The 'scraper' property can be either 'tvdb' or 'moviedb'


    # - name: tvshows
    #   type: filesystem
    #   content: tvshows
    #   scrapper: tvdb
    #   folders:
    #     - D:\Series
    #     - E:\Shows
    #   exclude:
    #     - '{Vice|House of Anubis|Warehouse 13}/{**|*}'

    ## ADVANCED SETTINGS
    # The 'ignoreUnreachableMedia' is helpeful when your media is spread across multiple removable hard drives, which
    # might not always be connected to the PC at all times, and thus syncing the repositories when one the them was
    # unconnected would cause the media files to be presumed deleted and removed from the database.
    # With this option enabled, when the server detects a missing file, it asks to the repository first if the
    # device is connected, and if it is not, it just ignored that media file

    #   enableDefaultMounts: true
    #   ignoreUnreachableMedia: true

    # The 'enableDefaultMounts' tells the system to assume the default mounting points (only useful in Windows,
    # where most removable devices are mounted as a letter K:\ for example)
    # On Linux, MacOS and other operating systems, each mount can be individually specified, for example, as:
    #   mounts:
    #       - /mnt/sdb
    #       - /mnt/sdc

ffmpeg:
    # Optional: If ffmpeg is not in the PATH environment variable, set a custom path
    #path: C:\path\to\ffmpeg\bin

    # Change this to true if your transcoding commands are very long (for instance, have a lot of trigger points)
    # Very rarely needs to be used, can be left as false most of the time
    #externalFilterScripts: false

mpv:
    cmd: mpv
    # If your mpv command is not in the PATH environment variable, you can specify it's location here
    #path: C:\path\to\mpv
